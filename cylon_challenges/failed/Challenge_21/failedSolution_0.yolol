u="."a=u:o=u z=""p="123"e=z n=0s="L"d=s c=d+--:b
b=a a=c---c if a==b or a==u then:o+=u goto2end x/=a>9goto:done++
i=0ifa>"/"and a<":"then g=f f=e e=a n++i=1end
q=0ifi and g+f+e==p then q=1r=1t=1n=0e=z end
ifi and n>8thens="A"n=0:o+=s e=z goto2end goto6+2*(s=="A")+3*(s=="P")
ifq then d="UL"-s s=d:o+=d goto2end x/=i:o+=u goto2
ifa=="*"thens="P"j="#nnn*nnn":o+=u r=0else:o+="B"end e=z goto2
o=u ifq thens=d o="C"end:o+=o n=0goto2
k=j---j x/=k=="n"and i==1:o+=u goto2
x/=k=="*"and a=="*"ifr thenn=0t=0end:o+=u goto2
x/=k=="#"anda=="#"andr and(n==3ort)goto13
s=d:o+="B"r=0e=z goto2
ifn==3thenp=g+f+e e=z end:o+="P"s=d r=0n=0goto2

//Submission to Cylon challenge Open Sesame (21)

//Run a door lock/alarm system connected to a set of numeric keys plus * and #. The input is a string containing the key currently being pressed or “.” when no key is pressed. If the same value is presented twice, this represents a single press, but “.” is not guaranteed before a new press of a different key. The input string is presented in :a which reads left to right  and in :b which reads from right to left.
//
The output is a string in `:o`, corresponding one for one to each character input (i.e. `:o` will always be the same length as `:a`/`:b`). Characters ("U","L","A","C","P" or "B") are placed into `:o` for a state transition - otherwise the output character is "." The output string reads from left to right.

The PIN is always three digits. For each test the initial PIN is 123 and the door starts locked. 

The system has the following states:

NORMAL The door is unlocked (`:o = "U"`) or locked (`:o = "L"`) by entering the PIN. 

ALARMED The system will become alarmed (`:o = "A"`) when in normal or pinchange state if nine digits have been entered at any time (even if there are other characters intervening) without the PIN being recognised. The alarm is cleared (`:o = "C"`) by entering the PIN which returns to the previous normal state. 

PINCHANGE The PIN is changed starting from the normal state by entering `* OLD PIN * NEW PIN #` and the system will emit a ping (`:o = "P"`). Pinchange is aborted immediately and the system emits a bong (:o = "B") immediately if there is any deviation from the correct sequence. `NEW PIN == OLD PIN` is okay (`:o = "P"`).

The PIN is recognised when the three correct digits are entered in the correct order without another character intervening. PIN entry is aborted at the point that the system becomes alarmed or a PIN change sequence is aborted.

//Fail exception: "Failed test case"

